name: "Nix build"
on:
  pull_request:
  push:
jobs:
  checks:
    runs-on: ubuntu-latest
    name: Nix checks
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v26
    - uses: cachix/cachix-action@v14
      with:
        name: neorocks
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix flake check -L

  build:
    name: ${{ matrix.attribute }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        attribute:
          - .#neorocks
          - .#neovim-nightly
          - .#devShells.x86_64-linux.default
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v26
    - uses: cachix/cachix-action@v14
      with:
        name: neorocks
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix build --accept-flake-config "${{matrix.attribute}}" -L

  tests:
    runs-on: ubuntu-latest
    name: Integration test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v26
      - uses: cachix/cachix-action@v14
        with:
          name: neorocks
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Run integration tests
        run: |
          nix profile install --accept-flake-config ".#neorocks"
          cd testproject
          luarocks config local_by_default true
          luarocks init
          luarocks config --scope project lua_interpreter neolua
          luarocks config --local lua_interpreter neolua
          luarocks test
          rm -r lua_modules/ .luarocks/ luarocks
          luarocks init
          luarocks config --local lua_interpreter neolua-nightly
          luarocks config --scope project lua_interpreter neolua-nightly
          luarocks test
        shell: bash
